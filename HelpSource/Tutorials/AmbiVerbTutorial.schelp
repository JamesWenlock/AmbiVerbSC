title:: AmbiVerbSC Tutorial
summary:: A detailed explanation of AmbiVerbSC's inner workings

section:: Overview

Ambisonics is an audio technique that allows for precise production, manipulation, and playback of full sphere surround sound. For the most part this method has been limited to academic circles, but recent advances in computing, software, and Virtual Reality (VR) have made Ambisonics more accessible and applicable than ever before. Although these developments are exciting, the amount effects designed for this audio methodology is minuscule in comparison to traditional audio environments.

The purpose of AmbiVerbSC is to explore the Ambisonic implementation of traditional digital audio effects by creating an Ambisonic reverberator. The algorithm is comprised of a delay-line cascade that is fed back into itself forming a feedback loop. Inside this loop, the summation of these delays is transformed in space over time to create a rich three dimensional spatial image. This tutorial will cover implementation and a few creative applications of this structure.

image:: ambiverbsc.png::

section:: Tank Reverb Architecture

We'll begin by deconstructing the monophonic reverberation architecture AmbiVerbSC is built upon. It consists of of an allpass cascade inside of a feedback loop. Through every loop iteration, the signal is delayed, split into two frequency bands, and scaled. The output consists of the summation of these passes sent through another allpass cascade. A high pass controls DC, and the initial signal is added to a delayed output of of this structure to allow for predelay and mix control. This section will go over the individual elements of this structure.

image:: tank.png::

subsection:: AllPass Cascades

image:: allpasschain.png::

The all-pass cascade acts as the major echo generator in the signal flow. It contains a series of modulated all-pass reverberators each with unique parameters. For AmbiVerbSC, these reverbators are implemented using link::Classes/AllpassL ::

image:: allpassreverberator.png::

Each reverberator needs 2 arguments to function: a delay time, and a g value. The delay time represents the amount of time the signal is delayed in seconds, and the g value specifies a scaler for the output as it runs through the feedback loop. A resulting variable of this system is decay, defined as the time it takes for the output decreases to -60db.These values are related via the following formula.

code:: delay = -3delay/(log10(g)) ::

With a bit of algebra and this formula, any of the reverberator parameters can be calculated so long as two are defined. The two parameters we'll specify are a g-value and delay times.

The g value is set as the reciprocal of the golden ratio (2 / (1 + sqrt(5))) and multipled by scaler argument to allow for varying degrees of time dispersion (decay of each reverberator). This number will be constant for all of our all-passes.

Delay times calculated from the normal modes of a rectangular room using the following formula.

Image::Zolzer.png::

Where

c = the speed of sound

[Ix, Iy, Iz] = dimensions of a room

[Nx, Ny, Nz] = integer values

This equation is used recursively to compute a large number of modal frequency estimates. The reciprocal of these modal values are taken and sorted from largest to shortest resulting an array of usable delaytimes that are accurate to our initial room dimensions.

We can now plug these values into our initial formula to get the parameters needed for link::Classes/AllpassL ::.

The final piece of the all-pass puzzle is delay-line modulation. This simulates the imperfections of a room and blurs resonances making the tank sound more realistic. Modulation is acheived using individual link::Classes/LFNoise2:: ugens for each all-pass. The amount of modulation is controlled using a width argument with width corrisponding to a scaler of the smallest delay time in the cascade. The rate is unversal for each all-pass.

subsection:: Feedback Loop

The Feedback Loop delays and scales the summation of our all-pass cascade. This operation is similar to our individual reverberators and contains the same parameters. Thus, we can use the same equation to derive predictible values for our larger feedback loop. In this instance we'll be specifying a single delay-time and two decay values (this will be elaborated upon in the shelf filter section).

The delay-time is determined by summing the average delays of the reverberators inside the cascade and adding an additional delay. This value is than scaled by a spread argument to allow for control over the amount the allpass is fed through the feedback loop.

subsection:: Shelf Filters

image:: shelf.png::

Rather than multiplying this signal by a single coefficient (as we did with the reverberators), the signal is split into two shelf filters. These filters and then scaled with seperate variables, added back together, and sent back through the allpass chain. This allows for more precise, natural sounding dampening effects. For high level control, it makes more sense to define a decay argument (also refered to as ringtime) for each shelf rather than specifying these coefficients. We can do this by using the equation below with our decay arguments and the feedback delay value.

code::g   = 10**(-3 * delay/decay) -->
      Kny = 10**(-3 * feedbackDelay/highRingTime)
      Koc = 10**(-3 * feedbackDelay/lowRingTime)

section:: Conversion to Ambisonic

To convert the tank reverberator to Ambisonics, we'll take a B-format signal and convert to A-format (tetrahedral orientation). This A-format signal then sent through four seperate monophonic reverberators each with individual delay time calculations corrisponding to similar rooms. The output these four monophonic reverberators is then modulated using hilbert phase rotation, converted back to B-format, coupled, converted to A again, and sent back throught the loop. This spreads the B-Format signal in space over time creating a spatial dispersion effect. SuperCollider's multichannel expansion and the Amb This section will cover the implementation of this effect.

subsection:: Going From B to A


subsection:: Phase Rotation

subsection:: Coupling

section:: AmbiVerbGUI

image::ambiverbgui.png::

section:: Conclusion

Further exploration of the methods presented could lead to detailed room modeling, proximity effects for VR, and Ambisonic adaptations of other digital audio effects. This project was created in collaboration with the Center for Digital Arts and Experimental Media at the University of Washington under Dr.Joseph Anderson.

